
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ae  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000102  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000122  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000001a2  00000000  00000000  0000013d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000dc  00000000  00000000  000002df  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000001bb  00000000  00000000  000003bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000578  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000a8  00000000  00000000  00000598  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000048  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00000688  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

int main(void);

int main()
{
DDRA = 0b00001111;
  6c:	8f e0       	ldi	r24, 0x0F	; 15
  6e:	8a bb       	out	0x1a, r24	; 26
DDRC = 0b00001111;
  70:	84 bb       	out	0x14, r24	; 20

while(1)
	{
	PORTA = 0b0001;
  72:	e1 e0       	ldi	r30, 0x01	; 1
	PORTC = 0b1111;
  74:	4f e0       	ldi	r20, 0x0F	; 15
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  76:	28 ea       	ldi	r18, 0xA8	; 168
  78:	31 e6       	ldi	r19, 0x61	; 97
	_delay_ms(100);
	PORTA = 0b0010;
  7a:	72 e0       	ldi	r23, 0x02	; 2
	PORTC = 0b1111;
	_delay_ms(100);
	PORTA = 0b0100;
  7c:	64 e0       	ldi	r22, 0x04	; 4
	PORTC = 0b1111;
	_delay_ms(100);
	PORTA = 0b1000;
  7e:	58 e0       	ldi	r21, 0x08	; 8
DDRA = 0b00001111;
DDRC = 0b00001111;

while(1)
	{
	PORTA = 0b0001;
  80:	eb bb       	out	0x1b, r30	; 27
	PORTC = 0b1111;
  82:	45 bb       	out	0x15, r20	; 21
  84:	c9 01       	movw	r24, r18
  86:	01 97       	sbiw	r24, 0x01	; 1
  88:	f1 f7       	brne	.-4      	; 0x86 <main+0x1a>
	_delay_ms(100);
	PORTA = 0b0010;
  8a:	7b bb       	out	0x1b, r23	; 27
	PORTC = 0b1111;
  8c:	45 bb       	out	0x15, r20	; 21
  8e:	c9 01       	movw	r24, r18
  90:	01 97       	sbiw	r24, 0x01	; 1
  92:	f1 f7       	brne	.-4      	; 0x90 <main+0x24>
	_delay_ms(100);
	PORTA = 0b0100;
  94:	6b bb       	out	0x1b, r22	; 27
	PORTC = 0b1111;
  96:	45 bb       	out	0x15, r20	; 21
  98:	c9 01       	movw	r24, r18
  9a:	01 97       	sbiw	r24, 0x01	; 1
  9c:	f1 f7       	brne	.-4      	; 0x9a <main+0x2e>
	_delay_ms(100);
	PORTA = 0b1000;
  9e:	5b bb       	out	0x1b, r21	; 27
	PORTC = 0b1111;
  a0:	45 bb       	out	0x15, r20	; 21
  a2:	c9 01       	movw	r24, r18
  a4:	01 97       	sbiw	r24, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <main+0x38>
  a8:	eb cf       	rjmp	.-42     	; 0x80 <main+0x14>

000000aa <_exit>:
  aa:	f8 94       	cli

000000ac <__stop_program>:
  ac:	ff cf       	rjmp	.-2      	; 0xac <__stop_program>
